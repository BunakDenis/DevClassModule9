/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package global.goit.edu;

import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;
import java.nio.charset.StandardCharsets;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) throws InterruptedException, IOException {
        HttpResponse response = new HttpResponse();
        ServerSocket server = new ServerSocket(10000);

        ExecutorService executor = Executors.newFixedThreadPool(10);

        while (true) {
            System.out.println("Wait for connection");
            Socket connection = server.accept();
            System.out.println("Client connected");

            executor.submit(() -> {
                try {
                    handleConnection(response, connection);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                } catch (InterruptedException e) {
                    throw new RuntimeException(e);
                }
            });


        }

    }

    private static void handleConnection(HttpResponse response, Socket connection) throws IOException, InterruptedException {
        InputStream is = connection.getInputStream();

        HttpRequest request = HttpRequest.of(readAll(is));

        System.out.println("#######");
        //System.out.println("requestText = " + requestText);
        System.out.println("requestText = " + request);
        System.out.println("#######");

        response.setStatusCode(200);
        response.setStatusText("OK");

        try {
            System.out.println("request.getPath() = " + request.getPath());
            String content = Files.getFileByPath(request.getPath());
            //System.out.println("content = " + content);
            //response.setBody(content);
            response.setBody("<h1>Hello World!</h1>");
        } catch (Exception e) {

            response.setStatusCode(404);
            response.setStatusText("NOT FOUND");
            String content = Files.getFileByPath("\\pageNotFound.html");
            //System.out.println("content = " + content);
            //response.setBody(content);
            response.setBody("<h1>Page not found</h1>");

        }

        String responseText = response.toString();

        System.out.println("responseText = " + responseText);
        byte[] responseTextBytes = responseText.getBytes(StandardCharsets.UTF_8);

        connection.getOutputStream().write(responseTextBytes);
    }

    private static String readAll(InputStream is) throws InterruptedException, IOException {
        Thread.sleep(2000);

        byte[] bytes = new byte[1024 * 20];
        int len = 0;

        while (is.available() > 0) {

            int read = is.read(bytes, len, is.available());

            len += read;

            Thread.sleep(2000);

        }

        return new String(bytes, 0, len);

    }
}
